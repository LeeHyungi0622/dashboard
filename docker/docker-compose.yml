version: "3"
services:
  ingestmanager:
    container_name: ingestmanager
    build:
      context: ./dockerfile
      dockerfile: Dockerfile.IngestMgr
      args:
        - VERSION=0.0.1-SNAPSHOT
    ports:
      - "${INGEST_MGR_PORT}:${INGEST_MGR_PORT}"
    depends_on:
      - nifi
    network_mode: "host"
    environment:
      SPRING_DATASOURCE_DRIVERCLASSNAME: org.postgresql.Driver
      SPRING_DATASOURCE_JDBCURL: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${INGEST_MGR_DB_NAME}
      SPRING_DATASOURCE_USERNAME: "${DB_USERNAME}"
      SPRING_DATASOURCE_PASSWORD: "${DB_PASSWORD}"
      CITYHUB_CLIENT_CLIENTID: "${INGEST_MGR_CLIENT_ID}"
      CITYHUB_CLIENT_CLIENTSECRET: "${INGEST_MGR_CLIENT_SECRET}"
      CITYHUB_CLIENT_USERAUTHORIZATIONURI: "${SECRUITY_PROTOCOL}://${SECURITY_HOST}:${SECURITY_SSO_PORT}/oauth2.0/authorize"
      CITYHUB_CLIENT_ACCESSTOKENURI: "${SECRUITY_PROTOCOL}://${SECURITY_HOST}:${SECURITY_SSO_PORT}/oauth2.0/token"
      CITYHUB_CLIENT_PUBLICKEYURI: "${SECRUITY_PROTOCOL}://${SECURITY_HOST}:${SECURITY_SSO_PORT}/security/publickey"
      CITYHUB_CLIENT_LOGOUTURI: "${SECRUITY_PROTOCOL}://${SECURITY_HOST}:${SECURITY_SSO_PORT}/security/logout"
      CITYHUB_CLIENT_USERINFOURI: "${SECRUITY_PROTOCOL}://${SECURITY_HOST}:${SECURITY_SSO_PORT}/security/users"
      CITYHUB_CLIENT_REDIRECTURI: "${INGEST_MGR_PROTOCOL}://${INGEST_MGR_HOST}:${INGEST_MGR_PORT}/accesstoken"
      CITYHUB_SECURITY_ACCESSROLE_USER: "${SECURITY_ACCESSROLE_USER}"
      CITYHUB_DATACORE_MANAGER_URL: "${DC_MGR_PROTOCOL}://${DC_MGR_HOST}:${DC_MGR_PORT}"
      CITYHUB_DATACORE_INGESTINTERFACE_URL: "${DC_INGEST_PROTOCOL}://${DC_INGEST_HOST}:${DC_INGEST_PORT}"
      NIFI_URL: "${NIFI_PROTOCOL}://${NIFI_HOST}:${NIFI_PORT}"
      NIFI_USER: "${NIFI_USER}"
      NIFI_PASSWORD: "${NIFI_PASSWORD}"
      SPRING_SECURITY_ENABLED: "${INGEST_MGR_SSO_ENABELD}"
      SERVER_SSL_ENABLED: "${INGEST_MGR_SSL}"
      SERVER_SSL_KEY-STORE: classpath:keystore.jks
      SERVER_SSL_KEY-STORE-TYPE: JKS
      SERVER_SSL_KEY-STORE-PASSWORD: u9989z

  nifi:
    container_name: nifi
    build:
      context: ./dockerfile
      dockerfile: Dockerfile.NiFi
    environment:
      NIFI_WEB_PROXY_HOST: '${NIFI_HOST}:${NIFI_PORT}'
      NIFI_WEB_HTTPS_HOST: '0.0.0.0'
      NIFI_WEB_HTTPS_PORT: "${NIFI_PORT}"
      TZ: "${TIME_ZONE}"
      SINGLE_USER_CREDENTIALS_USERNAME: "${NIFI_USER}"
      SINGLE_USER_CREDENTIALS_PASSWORD: "${NIFI_PASSWORD}"
    volumes:
       - nifi-conf:/opt/nifi/nifi-current/conf
       - nifi-state:/opt/nifi/nifi-current/state
       - nifi-content:/opt/nifi/nifi-current/content_repository
       - nifi-database:/opt/nifi/nifi-current/database_repository
       - nifi-flowfile:/opt/nifi/nifi-current/flowfile_repository
       - nifi-provenance:/opt/nifi/nifi-current/provenance_repository
    ports:
      - 20000-20099:20000-20099/tcp
      #http - 8080/https - 8443
      #      - 8008:8008
      - "${NIFI_PORT}:${NIFI_PORT}"
    network_mode: "host"
volumes:
  nifi-conf:
  nifi-state:
  nifi-content:
  nifi-database:
  nifi-flowfile:
  nifi-provenance:
    
