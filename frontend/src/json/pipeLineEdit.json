{
  "id": 2,
  "creator": "admin",
  "name": "REST API TEST",
  "detail": "REST API TEST pipeline",
  "dataSet": "parkingSensor",
  "collector": {
    "name": "REST API",
    "isCompleted": true,
    "NifiComponents": [
      {
        "type": "processor",
        "name": "REST API",
        "requiredProps": [
          {
            "name": "HTTP Method",
            "detail": "HTTP request method (GET, POST, PUT, PATCH, DELETE, HEAD, OPTIONS). Arbitrary methods are also supported. Methods other than POST, PUT and PATCH will be sent without a message body.",
            "defaultValue": ["POST", "GET", "PUT", "PATCH", "DELETE"],
            "inputValue": "GET"
          },
          {
            "name": "Remote URL",
            "detail": "Remote URL which will be connected to, including scheme, host, port, path.",
            "defaultValue": null,
            "inputValue": "http://110.45.181:8080/test"
          },
          {
            "name": "Connection Timeout",
            "detail": "Max wait time for response from remote service.",
            "defaultValue": ["5 sec"],
            "inputValue": "5 sec"
          },
          {
            "name": "Read Timeout",
            "detail": "Max idle time before closing connection to the remote service.",
            "defaultValue": ["15 sec"],
            "inputValue": "15 sec"
          },
          {
            "name": "Idle Timeout",
            "detail": "Max wait time for response from remote service.",
            "defaultValue": ["5 mins"],
            "inputValue": "5 mins"
          },
          {
            "name": "Scheduling",
            "detail": "Scheduling API call (unit = sec)",
            "defaultValue": ["30 sec"],
            "inputValue": "30 sec"
          }
        ],
        "optionalProps": [
          {
            "name": "SSL Context Service",
            "detail": "The SSL Context Service used to provide client certificate information for TLS/SSL (https) connections. It is also used to connect to HTTPS Proxy.",
            "defaultValue": null,
            "inputValue": null
          },
          {
            "name": "Attributes to Send",
            "detail": "Regular expression that defines which attributes to send as HTTP headers in the request. If not defined, no attributes are sent as headers. Also any dynamic properties set will be sent as headers. The dynamic property key will be the header key and the dynamic property value will be interpreted as expression language will be the header value.",
            "defaultValue": null,
            "inputValue": null
          },
          {
            "name": "Useragent",
            "detail": "The Useragent identifier sent along with each request",
            "defaultValue": null,
            "inputValue": null
          },
          {
            "name": "Basic Authentication Username",
            "detail": "The username to be used by the client to authenticate against the Remote URL.  Cannot include control characters (0-31), ':', or DEL (127).",
            "defaultValue": null,
            "inputValue": null
          },
          {
            "name": "Basic Authentication Password",
            "detail": "The password to be used by the client to authenticate against the Remote URL.",
            "defaultValue": null,
            "inputValue": null
          },
          {
            "name": "oauth2-access-token-provider",
            "detail": "NULL",
            "defaultValue": null,
            "inputValue": null
          }
        ]
      }
    ]
  },
  "filter": {
    "name": "filter",
    "isCompleted": true,
    "NifiComponents": [
      {
        "type": "processor",
        "name": "Base64Decoder",
        "requiredProps": [
          {
            "name": "isBase64",
            "detail": null,
            "defaultValue": null,
            "inputValue": "false"
          }
        ],
        "optionalProps": []
      },
      {
        "type": "processor",
        "name": "RootKeyFinder",
        "requiredProps": [
          {
            "name": "root_key",
            "detail": null,
            "defaultValue": null,
            "inputValue": "\"parkingLot\".\"sensorId\""
          }
        ],
        "optionalProps": []
      }
    ]
  },
  "converter": {
    "name": "converter",
    "isCompleted": true,
    "NifiComponents": [
      {
        "type": "processor",
        "name": "DataSetProperties",
        "requiredProps": [
          {
            "name": "location",
            "detail": "GeoProperty",
            "defaultValue": null,
            "inputValue": "\"parking_sensor\".\"timestamp\""
          },
          {
            "name": "parkingAreaId",
            "detail": "Property",
            "defaultValue": null,
            "inputValue": "\"timestamp\""
          },
          {
            "name": "parkingLotId",
            "detail": "Property",
            "defaultValue": null,
            "inputValue": "\"protocolversion\""
          }
        ],
        "optionalProps": []
      },
      {
        "type": "processor",
        "name": "IDGenerater",
        "requiredProps": [
          {
            "name": "level1",
            "detail": null,
            "defaultValue": null,
            "inputValue": "\"uniqueRole\""
          },
          {
            "name": "level2",
            "detail": null,
            "defaultValue": null,
            "inputValue": "\"timestamp\""
          },
          {
            "name": "level3",
            "detail": null,
            "defaultValue": null,
            "inputValue": "\"protocolversion\""
          }
        ],
        "optionalProps": []
      }
    ]
  }
}
