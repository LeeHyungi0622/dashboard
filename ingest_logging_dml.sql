 
INSERT INTO logging.module_code (module_code, module_name) values( 'DHUB_IM','ingest_manager' );

INSERT INTO logging.menu_code (menu_code, module_code, menu_name) values( 'IM001',(SELECT module_code FROM logging.module_code WHERE module_name='ingest_manager'),'토큰 발급' );
INSERT INTO logging.menu_code (menu_code, module_code, menu_name) values( 'IM002',(SELECT module_code FROM logging.module_code WHERE module_name='ingest_manager'),'데이터 셋 리스트 조회' );
INSERT INTO logging.menu_code (menu_code, module_code, menu_name) values( 'IM003',(SELECT module_code FROM logging.module_code WHERE module_name='ingest_manager'),'데이터 셋 상세 조회' );
INSERT INTO logging.menu_code (menu_code, module_code, menu_name) values( 'IM004',(SELECT module_code FROM logging.module_code WHERE module_name='ingest_manager'),'오류' );
INSERT INTO logging.menu_code (menu_code, module_code, menu_name) values( 'IM005',(SELECT module_code FROM logging.module_code WHERE module_name='ingest_manager'),'로그아웃' );
INSERT INTO logging.menu_code (menu_code, module_code, menu_name) values( 'IM006',(SELECT module_code FROM logging.module_code WHERE module_name='ingest_manager'),'유저 정보 조회' );
INSERT INTO logging.menu_code (menu_code, module_code, menu_name) values( 'IM007',(SELECT module_code FROM logging.module_code WHERE module_name='ingest_manager'),'유저 아이디 조회' );
INSERT INTO logging.menu_code (menu_code, module_code, menu_name) values( 'IM008',(SELECT module_code FROM logging.module_code WHERE module_name='ingest_manager'),'파이프라인 수집기 리스트 조회' );
INSERT INTO logging.menu_code (menu_code, module_code, menu_name) values( 'IM009',(SELECT module_code FROM logging.module_code WHERE module_name='ingest_manager'),'등록 완료된 파이프라인 리스트 조회' );
INSERT INTO logging.menu_code (menu_code, module_code, menu_name) values( 'IM010',(SELECT module_code FROM logging.module_code WHERE module_name='ingest_manager'),'등록 완료된 파이프라인 중 특정 파이프라인 조회' );
INSERT INTO logging.menu_code (menu_code, module_code, menu_name) values( 'IM011',(SELECT module_code FROM logging.module_code WHERE module_name='ingest_manager'),'임시 저장된 파이프라인 등록 완료' );
INSERT INTO logging.menu_code (menu_code, module_code, menu_name) values( 'IM012',(SELECT module_code FROM logging.module_code WHERE module_name='ingest_manager'),'등록 완료된 파이프라인 중 특정 파이프라인 수정' );
INSERT INTO logging.menu_code (menu_code, module_code, menu_name) values( 'IM013',(SELECT module_code FROM logging.module_code WHERE module_name='ingest_manager'),'등록 완료된 파이프라인 중 특정 파이프라인 삭제' );
INSERT INTO logging.menu_code (menu_code, module_code, menu_name) values( 'IM014',(SELECT module_code FROM logging.module_code WHERE module_name='ingest_manager'),'등록 완료 파이프라인 구성 요소 조회' );
INSERT INTO logging.menu_code (menu_code, module_code, menu_name) values( 'IM015',(SELECT module_code FROM logging.module_code WHERE module_name='ingest_manager'),'임시 저장된 파이프라인 업데이트' );
INSERT INTO logging.menu_code (menu_code, module_code, menu_name) values( 'IM016',(SELECT module_code FROM logging.module_code WHERE module_name='ingest_manager'),'최초 파이프라인 생성' );
INSERT INTO logging.menu_code (menu_code, module_code, menu_name) values( 'IM017',(SELECT module_code FROM logging.module_code WHERE module_name='ingest_manager'),'임시 저장된 파이프라인 리스트 조회' );
INSERT INTO logging.menu_code (menu_code, module_code, menu_name) values( 'IM018',(SELECT module_code FROM logging.module_code WHERE module_name='ingest_manager'),'임시 저장된 파이프라인 중 특정 파이프라인 삭제' );
INSERT INTO logging.menu_code (menu_code, module_code, menu_name) values( 'IM019',(SELECT module_code FROM logging.module_code WHERE module_name='ingest_manager'),'임시 저장된 파이프라인 중 특정 파이프라인 조회' );
INSERT INTO logging.menu_code (menu_code, module_code, menu_name) values( 'IM020',(SELECT module_code FROM logging.module_code WHERE module_name='ingest_manager'),'임시 저장 파이프라인 구성 요소 조회' );
INSERT INTO logging.menu_code (menu_code, module_code, menu_name) values( 'IM021',(SELECT module_code FROM logging.module_code WHERE module_name='ingest_manager'),'특정 파이프라인 상태 조회' );
INSERT INTO logging.menu_code (menu_code, module_code, menu_name) values( 'IM022',(SELECT module_code FROM logging.module_code WHERE module_name='ingest_manager'),'등록 완료된 파이프라인 리스트 페이지' );
INSERT INTO logging.menu_code (menu_code, module_code, menu_name) values( 'IM024',(SELECT module_code FROM logging.module_code WHERE module_name='ingest_manager'),'최초 파이프라인 생성 페이지' );
INSERT INTO logging.menu_code (menu_code, module_code, menu_name) values( 'IM023',(SELECT module_code FROM logging.module_code WHERE module_name='ingest_manager'),'임시 저장된 파이프라인 등록 완료 페이지' );
INSERT INTO logging.menu_code (menu_code, module_code, menu_name) values( 'IM025',(SELECT module_code FROM logging.module_code WHERE module_name='ingest_manager'),'등록 완료된 파이프라인 수정 페이지' );
INSERT INTO logging.menu_detail (menu_code, menu_detail, http_method, uri) values( 'IM001','초기 접근 시, Security Module으로부터 token을 가져오는 API','GET','/accesstoken' );
INSERT INTO logging.menu_detail (menu_code, menu_detail, http_method, uri) values( 'IM002','Datacore Manager에 저장된 Dataset의 List를 가져오는 API','GET','/dataset/list' );
INSERT INTO logging.menu_detail (menu_code, menu_detail, http_method, uri) values( 'IM003','Datacore Manager로부터 Dataset의 Properties를 가져오는 API','GET','/dataset/properties/{datasetid}' );
INSERT INTO logging.menu_detail (menu_code, menu_detail, http_method, uri) values( 'IM004','오류 시 호출되는 API','GET','/error' );
INSERT INTO logging.menu_detail (menu_code, menu_detail, http_method, uri) values( 'IM005','로그아웃 시 호출되는 API','GET','/logout' );
INSERT INTO logging.menu_detail (menu_code, menu_detail, http_method, uri) values( 'IM006','로그인한 회원 정보를 Security Module에서 조회한 후 가져오는 API','GET','/user' );
INSERT INTO logging.menu_detail (menu_code, menu_detail, http_method, uri) values( 'IM007','로그인한 회원 정보중 아이디 값만을 가져오는 API','GET','/userId' );
INSERT INTO logging.menu_detail (menu_code, menu_detail, http_method, uri) values( 'IM008','파이프라인 수집기 리스트 조회하는 API','GET','/pipelines/collectors' );
INSERT INTO logging.menu_detail (menu_code, menu_detail, http_method, uri) values( 'IM009','등록 완료된 파이프라인 리스트를 조회하는 API','GET','/pipelines/completed' );
INSERT INTO logging.menu_detail (menu_code, menu_detail, http_method, uri) values( 'IM010','등록 완료된 파이프라인 중 Pipeline id를 가진 파이프라인 상세 정보를 조회하는 API','GET','/pipelines/completed/{pipelineId}' );
INSERT INTO logging.menu_detail (menu_code, menu_detail, http_method, uri) values( 'IM011','임시 저장 파이프라인의 id를 통해 등록 완료 파이프라인으로 등록하는 API','POST','/pipelines/completed/{pipelineId}' );
INSERT INTO logging.menu_detail (menu_code, menu_detail, http_method, uri) values( 'IM012','등록 완료된 파이프라인 중 Pipeline id를 가진 파이프라인을 수정하는 API','PUT','/pipelines/completed/{pipelineId}' );
INSERT INTO logging.menu_detail (menu_code, menu_detail, http_method, uri) values( 'IM013','등록 완료된 파이프라인 중 Pipeline id를 가진 파이프라인을 삭제하는 API','DELETE','/pipelines/completed/{pipelineId}' );
INSERT INTO logging.menu_detail (menu_code, menu_detail, http_method, uri) values( 'IM014','등록 완료 파이프라인을 수정 페이지에서 수정할 때 사용될 여러 구성요소를 조회하는 API','GET','/pipelines/completed/properties' );
INSERT INTO logging.menu_detail (menu_code, menu_detail, http_method, uri) values( 'IM015','최초 파이프라인 생성 후 UPSERT 처리하는 API','POST','/pipelines/drafts' );
INSERT INTO logging.menu_detail (menu_code, menu_detail, http_method, uri) values( 'IM016','처음 파이프라인 생성 시, 빈 파이프라인 객체 전달 API','GET','/pipelines/drafts/create' );
INSERT INTO logging.menu_detail (menu_code, menu_detail, http_method, uri) values( 'IM017','임시 저장된 파이프라인 리스트를 조회하는 API','GET','/pipelines/drafts/list' );
INSERT INTO logging.menu_detail (menu_code, menu_detail, http_method, uri) values( 'IM018','임시 저장된 파이프라인 중 Pipeline id를 가진 파이프라인을 삭제하는 API','DELETE','/pipelines/drafts/{pipelineId}' );
INSERT INTO logging.menu_detail (menu_code, menu_detail, http_method, uri) values( 'IM019','임시 저장된 파이프라인 중 Pipeline id를 가진 파이프라인 상세 정보를 조회하는 API','GET','/pipelines/drafts/{pipelineId}' );
INSERT INTO logging.menu_detail (menu_code, menu_detail, http_method, uri) values( 'IM020','최초 파이프라인 생성 시, 사용될 여러 구성요소를 조회하는 API','GET','/pipelines/drafts/properties' );
INSERT INTO logging.menu_detail (menu_code, menu_detail, http_method, uri) values( 'IM021','등록 완료된 파이프라인 중 Pipeline id를 가진 파이프라인 상태를 조회하는 API','PUT','/pipeline/run-status/{pipelineId}' );
INSERT INTO logging.menu_detail (menu_code, menu_detail, http_method, uri) values( 'IM022','등록 완료된 파이프라인 리스트 표출','GET','/list' );
INSERT INTO logging.menu_detail (menu_code, menu_detail, http_method, uri) values( 'IM023','임시 저장 파이프라인 ID가 없는 최초 파이프라인 등록시 페이지','GET','/pipelineRegister' );
INSERT INTO logging.menu_detail (menu_code, menu_detail, http_method, uri) values( 'IM024','임시 저장 파이프라인 ID가 있는 파이프라인 등록시 페이지','GET','/pipelineRegister/{temp_id}' );
INSERT INTO logging.menu_detail (menu_code, menu_detail, http_method, uri) values( 'IM025','등록 완료된 파이프라인 수정 페이지','GET','/pipelineUpdate/{comp_id}' );

