# see: https://docs.microsoft.com/en-us/azure/devops/pipelines/ecosystems/deploy-linux-vm?view=azure-devops&tabs=java
variables:
  #isRelease: "$[startsWith(variables['Build.SourceBranch'], 'refs/heads/release/1.0.0')]"
  # isDevelop: "$[eq(variables['Build.SourceBranch'], 'refs/heads/develop')]"
  - name: isDevelop
    value: "$[eq(variables['Build.SourceBranch'], 'refs/heads/develop')]"
  # JAVA_HOME: "/usr/lib/jvm/java-11-openjdk-amd64"
  # NEXUS_USER: "admin"
  # NEXUS_PW: 'dtonic_1!'
  - name: NEXUS_USER
    value: "admin"
  - name: NEXUS_PW
    value: 'dtonic_1!'
  # VERSION: "1.1.3"
  - group: 'dhub-variable-group'
  - name: dhub-apigateway
    value: $[variables.apigateway]
  - name: dhub-ingestmanager
    value: $[variables.ingestmanager]
  - name: dhub-datacore
    value: $[variables.datacore]

trigger:
  branches:
    include:
      - release/v?.?.?
      - task/#2555_pipeline_task_by_mike

# build agent pool default가 dtonic꺼
# see: https://dev.azure.com/dtonic/_settings/agentpools
pool:
  name: Azure Pipelines
# develop branch build
stages:
  - stage: AdvancedDevelopIngestManagerService
    displayName: Build advanced Release IngestManager service
    jobs:
      - job: build
        steps:
          - task: Maven@3
            inputs:
              mavenPomFile: '$(Build.SourcesDirectory)/pom.xml' # Maven Pom.xml 경로
              publishJUnitResults: false
              javaHomeOption: 'JDKVersion'
              mavenVersionOption: 'Default'
              mavenAuthenticateFeed: false
              effectivePomSkip: false
              sonarQubeRunAnalysis: false
            displayName: 'IngestManager Packaging'
          - task: CopyFiles@2
            inputs:
              SourceFolder: '$(Build.SourcesDirectory)/docker/release'
              TargetFolder: '$(Build.ArtifactStagingDirectory)/ingest-manager'
          - task: CopyFiles@2
            inputs:
              SourceFolder: '$(Build.SourcesDirectory)/docker/dockerfile'
              Contents: '**'
              TargetFolder: '$(Build.ArtifactStagingDirectory)/ingest-manager'
          - task: CopyFiles@2
            inputs:
              SourceFolder: '$(Build.SourcesDirectory)/target'
              Contents: '**.jar'
              TargetFolder: '$(Build.ArtifactStagingDirectory)/ingest-manager'
          - task: CopyFiles@2
            inputs:
              SourceFolder: '$(Build.SourcesDirectory)/deploy'
              Contents: 'deploy-release.sh'
              TargetFolder: '$(Build.ArtifactStagingDirectory)/ingest-manager'
          - task: CopyFiles@2
            inputs:
              SourceFolder: '$(Build.SourcesDirectory)/src/main/resources'
              Contents: 'keystore.jks'
              TargetFolder: '$(Build.ArtifactStagingDirectory)/ingest-manager'
          - task: CopyFiles@2
            inputs:
              SourceFolder: '$(Build.SourcesDirectory)'
              Contents: '**.sql'
              TargetFolder: '$(Build.ArtifactStagingDirectory)/ingest-manager'
          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)'
              ArtifactName: 'IngestManager'
              publishLocation: 'Container'

  # release branch publish
  - stage: TestbedRelease73
    #condition: and(succeeded(), eq(variables.isDevelop, true))
    jobs:
      - deployment: Datacore_Release73Server
        environment:
          # 73번 서버에 deploy
          name: "Datacore_Release73Server"
          resourceType: VirtualMachine
        strategy:
          runOnce:
            deploy:
              steps:
                - task: CmdLine@2
                  inputs:
                    script: |
                      mkdir -p /jars/ui/deploy
                      apt-get -y install zip
                    workingDirectory: '$(Agent.BuildDirectory)'
                - task: ArchiveFiles@2
                  inputs:
                    rootFolderOrFile: '$(Agent.BuildDirectory)/IngestManager/ingest-manager'
                    includeRootFolder: true
                    archiveType: 'zip'
                    archiveFile: '$(Agent.BuildDirectory)/IngestManager/IngestManager-$(dhub-ingestmanager).zip'
                    replaceExistingArchive: true
                - task: CmdLine@2
                  inputs:
                    script: |
                      curl -v -u $NEXUS_USER:$NEXUS_PW --upload-file $PWD/IngestManager/IngestManager-$(dhub-ingestmanager).zip https://nexus.dtonic.io/repository/products/D.Hub/IngestManager/$(dhub-ingestmanager)/IngestManager-$(dhub-ingestmanager).zip
                    workingDirectory: '$(Agent.BuildDirectory)'
