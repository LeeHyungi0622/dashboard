# see: https://docs.microsoft.com/en-us/azure/devops/pipelines/ecosystems/deploy-linux-vm?view=azure-devops&tabs=java
variables:
  isRelease: "$[startsWith(variables['Build.SourceBranch'], 'refs/heads/release')]"
  isDevelop: "$[eq(variables['Build.SourceBranch'], 'refs/heads/develop')]"
  deployDir: "/home/azure-deploy-agent/test"

trigger:
  - develop
  - release*
# build agent pool default가 dtonic꺼
# see: https://dev.azure.com/dtonic/_settings/agentpools
pool:
  name: default

stages: 
- stage: AdvancedAnalysisService  
  displayName: Build advanced ingestManager service
  jobs:
    - job: build
      steps:
      - task: Maven@3
        inputs:
          mavenPomFile: '$(Build.SourcesDirectory)/pom.xml' # Maven Pom.xml 경로
          publishJUnitResults: false 
          javaHomeOption: 'JDKVersion'
          mavenVersionOption: 'Default'
          mavenAuthenticateFeed: false
          effectivePomSkip: false
          sonarQubeRunAnalysis: false
        displayName: 'IngestManager Packaging'
      - task: CopyFiles@2
        inputs:
          SourceFolder: '$(Build.SourcesDirectory)/target'
          Contents: '**.jar'
          TargetFolder: '$(Build.ArtifactStagingDirectory)/jars'
      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)'
          ArtifactName: 'ingestManager'
          publishLocation: 'Container'

- stage: DevelopbedRelease
  condition: and(succeeded(), eq(variables.isDevelop, true))
  jobs:
    - deployment: IngestManager_Dev_123Server
      # 배포할 Envornment
      environment:
        name: "Develop_ENV_123server"
        resourceType: VirtualMachine
      variables:
        baseFolder: /usr/local/lib/ingestManager
        AdvancedAnalysisJarFile: $[ stageDependencies.AdvancedAnalysisService.build.outputs['buildResult.jarFileName'] ]
      strategy:
        runOnce:
          deploy:
            steps:
              - task: CmdLine@2
                inputs:
                  script: 'mv ./ingestManager/jars/d-hub-ingest-module-0.0.1-SNAPSHOT.jar /jars/d-hub-ingest-module-0.0.1-SNAPSHOT.jar'
                  workingDirectory: '$(Agent.BuildDirectory)'
              - task: CmdLine@2
                inputs:
                  script: 'chmod 771 ./ingestManager/deploy.sh'
                  workingDirectory: '$(Agent.BuildDirectory)'
              - task: CmdLine@2
                inputs:
                  script: 'sh ./ingestManager/deploy.sh'
                  workingDirectory: '$(Agent.BuildDirectory)'
- stage: ReleasebedrRelease
  condition: and(succeeded(), eq(variables.isRelease, true))
  jobs:
    - deployment: IngestManager_Dev_123Server
      # 배포할 Envornment
      environment:
        name: "Develop_ENV_123server"
        resourceType: VirtualMachine
      variables:
        baseFolder: /usr/local/lib/ingestManager
        AdvancedAnalysisJarFile: $[ stageDependencies.AdvancedAnalysisService.build.outputs['buildResult.jarFileName'] ]
      strategy:
        runOnce:
          deploy:
            steps:
              - task: CmdLine@2
                inputs:
                  script: 'mv ./ingestManager/jars/d-hub-ingest-module-0.0.1-SNAPSHOT.jar /jars/d-hub-ingest-module-$(Build.SourceBranchName).jar'
                  workingDirectory: '$(Agent.BuildDirectory)'
              #- task: CmdLine@2
                #inputs:
                  #script: 'chmod 771 ./ingestManager/deploy.sh'
                  #workingDirectory: '$(Agent.BuildDirectory)'
              #- task: CmdLine@2
                #inputs:
                  #script: 'sh ./ingestManager/deploy.sh'
                  #workingDirectory: '$(Agent.BuildDirectory)'